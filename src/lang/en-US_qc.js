export default {
    common: {
        searchPlaceholder: 'Search keyword',
        refreshTooltip: 'Refresh table',
        addButton: '+ New',
        cancel: 'Cancel',
        confirm: 'Confirm',
        delete: 'Delete',
        operationCancelled: 'Operation Cancelled',
        table: {
            id: 'ID',
            name: 'Name',
            actions: 'Actions',
            editButton: 'Edit',
            deleteButton: 'Delete',
        },
        addDialog: {
            title: 'Add',
            name: 'Name',
            cancelButton: 'Cancel',
            confirmButton: 'Confirm',
        },
        editDialog: {
            title: 'Edit',
            name: 'Name',
            cancelButton: 'Cancel',
            confirmButton: 'Confirm',
        },
        messages: {
            saveSuccess: 'Saved successfully!',
            saveFailed: 'Save failed',
        }
    },
    userManagement: {
        title: 'User Management',
        searchPlaceholder: 'Search keyword',
        refreshTooltip: 'Refresh User table',
        addButton: '+ New',
        cancel: 'Cancel',
        edit: 'Edit',
        confirm: 'Confirm',
        delete: 'Delete',
        operationCancelled: 'Operation Cancelled',
        table: {
            id: 'ID',
            name: 'Name',
            username: 'Username',
            shifts: 'Assigned Shifts',
            wecomId: 'WeCom ID',
            role: 'Role',
            status: 'Status',
            email: 'Email',
            phoneNumber: 'Phone Number',
            actions: 'Actions',
            statusTooltip: 'If inactive, the user won\'t be able to use this account',
            editButton: 'Edit',
            deleteButton: 'Delete',
            leader: 'Leader'
        },
        addDialog: {
            title: 'Add User',
            name: 'Name',
            role: 'Role',
            wecomId: 'WeCom ID',
            email: 'Email',
            phoneNumber: 'Phone Number',
            assignedShifts: 'Assigned Shifts',
            status: 'Status',
            username: 'Username',
            password: 'Password',
            cancelButton: 'Cancel',
            confirmButton: 'Confirm',
            assignedShiftPlaceHolder: 'Select Assigned Shifts',
            selectStatusPlaceHolder: 'Select Status',
        },
        editDialog: {
            title: 'Edit User',
            name: 'Name',
            role: 'Role',
            wecomId: 'WeCom ID',
            username: 'Username',
            email: 'Email',
            phoneNumber: 'Phone Number',
            assignedShifts: 'Assigned Shifts',
            status: 'Status',
            changePassword: 'Change Password',
            newPassword: 'New Password',
            confirmPassword: 'Confirm Password',
            cancelButton: 'Cancel',
            confirmButton: 'Confirm',
        },
        status: {
            active: 'Active',
            inactive: 'Inactive',
        },
        validation: {
            nameRequired: 'Name is required',
            roleRequired: 'Role is required',
            wecomIdRequired: 'WeCom ID is required',
            statusRequired: 'Status is required',
            usernameRequired: 'Username is required',
            usernameMinLength: 'Username must be at least 4 characters',
            passwordRequired: 'Password is required',
            passwordMinLength: 'Password must be at least 4 characters',
            passwordsNotMatch: 'Passwords do not match or are empty!',
            usernameExists: 'This username already exists',
            emailRequired: 'Email is required',
            emailFormat: 'Invalid email format',
            phoneNumberRequired: 'Phone number is required',
            phoneNumberFormat: 'Invalid phone number format',
            selfDeactivationSuccess: 'Your account has been successfully deactivated. You will not be able to log in after logging out.'
        },
        messages: {
            userAddedSuccess: 'User added successfully',
            userAddedFailed: 'Failed to add user',
            userUpdatedSuccess: 'User updated successfully',
            userUpdatedFailed: 'Failed to update user',
            userDeletedSuccess: 'User deleted successfully',
            shiftsUpdatedSuccess: 'Shifts updated successfully',
            shiftsUpdateFailed:  'Failed to update shifts',
            selfDeactivationWarning: 'You are deactivating your own account. Are you sure you want to proceed?',
            selfDeletionWarning: 'You are deleting your own account and your association with shifts. Are you sure you want to proceed?',
            deletionConfirmation: 'Are you sure you want to delete the user "{name}" as well as the association with shifts?',
            deletionCanceled: 'Deletion canceled',
            selfDeletionCanceled: 'Self-deletion canceled',
            statusUpdatedSuccess: 'Status updated successfully',
            statusUpdatedFailed:  'Failed to update status',
            selfDeactivationTitle: 'Self Deactivation',
            deletionTitle: 'Deletion',
            validationErrors: 'Please fix validation errors before proceeding',
            deactivationFailed: 'Failed to deactivate account',
            pleaseCorrectErrors: 'Please correct the errors.',
            passwordNotMatchOrFewerCharacters: 'Password does not match or fewer than 4 characters',
            yourAccountIsDeletedAndUnableToLogin: 'Your account is deleted, once you log out you are not able to log in.',
            deletionFailed: 'Deletion failed'
        },
        role: {
            admin: 'Administrator',
            qcWorker: 'QC Worker',
            unknown: 'Unknown Role',
            selectRowPlaceHolder: 'Select User Role'
        },
    },
    pagination: {
        total: 'Total {total}',
        perPage: '/page'
    },
    navigationMenu: {
        home: "Home",
        systemManagement: "System Management",
        userManagement: "User",
        shiftManagement: "Shift",
        qualityManagement: "Quality Management",
        formManagement: "Form Tree",
        formDesigner: "Form Designer",
        dispatchManagement: "Task Dispatch",
        instrumentManagement: "Instrument",
        testSubjectManagement: "Test Subject",
        samplingLocationManagement: "Sampling Location",
        dataSummary: "Data Summary",
        taskCenter: "My Task Center",
        taskDashboard: "Dashboard",
        todayTasks: "Today's Tasks",
        futureTasks: "Future Tasks",
        historyTasks: "History Tasks",
        overdueTasks: "Overdue Tasks",
        taskCalendar: "Task Calendar",
        formDataSummary: "Form Data Summary",
        logout: "Logout",
        userRole: "User Role",
        username: "Username"
    },
    shiftManagement: {
        title: 'Shift Management',
        searchPlaceholder: 'Search Shifts',
        refreshTooltip: 'Refresh Shift table',
        addButton: '+ New',
        cancel: 'Cancel',
        edit: 'Edit',
        confirm: 'Confirm',
        delete: 'Delete',
        actions: 'Actions',
        membersTab: 'Members',
        formsTab: 'Associated Forms',
        table: {
            id: 'ID',
            name: 'Name',
            type: 'Type',
            leader: 'Shift Leader',
            startTime: 'Start Time',
            endTime: 'End Time',
            status: 'Status',
            description: 'Description',
            actions: 'Actions',
            statusTooltip: 'Active/Inactive status of the shift',
            editButton: 'Edit',
            deleteButton: 'Delete',
            viewMembers: 'Members',
            viewShift: 'View',
            createdAt: 'Created At'
        },
        addDialog: {
            title: 'Add Shift',
            name: 'Name',
            type: 'Type',
            leader: 'Shift Leader',
            startTime: 'Start Time',
            endTime: 'End Time',
            members: 'Members',
            forms: 'Associated Forms',
            description: 'Description',
            status: 'Status',
            cancelButton: 'Cancel',
            confirmButton: 'Confirm',
            selectLeaderPlaceholder: 'Select Shift Leader',
            selectStatusPlaceholder: 'Select Status',
            selectMembers: 'Select Members',
        },
        editDialog: {
            title: 'Edit Shift',
            name: 'Name',
            type: 'Type',
            leader: 'Shift Leader',
            startTime: 'Start Time',
            endTime: 'End Time',
            members: 'Members',
            forms: 'Associated Forms',
            description: 'Description',
            status: 'Status',
            cancelButton: 'Cancel',
            confirmButton: 'Confirm',
            selectLeaderPlaceholder: 'Select Shift Leader',
            selectMembersPlaceholder: 'Select Members',
            selectStatusPlaceholder: 'Select Status',
        },
        status: {
            active: 'Active',
            inactive: 'Inactive',
        },
        validation: {
            nameRequired: 'Name is required',
            typeRequired: 'Type is required',
            leaderRequired: 'Shift Leader is required',
            startTimeRequired: 'Start Time is required',
            endTimeRequired: 'End Time is required',
        },
        messages: {
            shiftAddedSuccess: 'Shift added successfully',
            shiftUpdatedSuccess: 'Shift updated successfully',
            shiftDeletedSuccess: 'Shift deleted successfully',
            shiftDeletionFailed: 'Failed to delete shift',
            shiftEditedSuccess:  'Shift edited successfully',
            shiftEditedFailed: 'Failed to edit shift',
            membersUpdatedSuccess: 'Shift members updated successfully',
            deletionConfirmation: 'Are you sure you want to delete the shift "{name}" and disconnect all its relationships with members?',
            shiftDeletionCancelled: 'Shift deletion canceled',
            validationErrors: 'Please fix validation errors before proceeding',
            statusUpdatedSuccess: 'Status updated successfully',
            statusUpdatedFailed:  'Failed to update status'
        },
    },
    FormTree: {
        title: 'Form Tree',
        searchPlaceholder: 'Search name',
        edit: 'Edit',
        cancelEdit: 'Cancel Edit',
        addRoot: '+ New',
        add: 'Add',
        delete: 'Delete',
        deleteConfirmTitle: 'Delete Confirmation',
        deleteConfirmContent: 'Are you sure you want to delete ',
        cancel: 'Cancel',
        confirm: 'Confirm',
        appendDialogTitle: 'Add node to {parent}',
        namePlaceholder: 'Enter node name',
        typePlaceholder: 'Select node type',
        type: {
            folder: 'Folder',
            document: 'QC Form'
        },
        nameRequired: 'Name cannot be empty!',
        duplicateWarningTitle: 'Warning',
        duplicateWarningMessage: 'Duplicate name exists, do you want to continue?',
        duplicateContinue: 'Continue',
        duplicateCancel: 'Cancel',
        addSuccess: 'Node added successfully!',
        addFailed: 'Failed to add node',
        deleteSuccess: 'Deleted successfully!',
        deleteFailed: 'Failed to delete node',
        loadFailed: 'Failed to load data',
        errorTitle: 'Error',
        pleaseSelectFolder: 'Please select the folder',
        selectFolder: 'Select Folder'
    },
    FormDisplay: {
        titlePrefix: 'Form',
        available: 'Able to use',
        unavailable: 'Unable to use',
        quickDispatch: 'Quickly assign this task',
        countdownTitle: 'Task Countdown:',
        eSignature: 'E-Signature',
        clearSignature: 'Clear Signature',
        submit: 'Submit',
        reset: 'Reset',
        confirmSubmissionTitle: 'Confirm Submission',
        confirmSubmissionMessage: 'Are you sure you want to submit this form?',
        confirm: 'Confirm',
        cancel: 'Cancel',
        submissionSuccessTitle: 'Form Submitted Successfully',
        submissionSuccessMessage: 'Your form has been successfully submitted. Do you want to reset the form?',
        yes: 'Yes',
        no: 'No',
        resetConfirmTitle: 'Confirm Reset Form',
        resetConfirmMessage: 'Are you sure you want to reset the form? All entered data will be cleared!',
        formClearedSuccess: 'Form has been cleared!',
        countdownEndedTitle: 'Task Ended',
        countdownEndedMessage: 'Task has ended. The window will now close.',
        quickDispatchDialogTitle: 'Quick Dispatch for This Form Task',
        formSubmitSuccess: 'Form submitted successfully!',
        formSubmitError: 'Error inserting form data!',
        formLoadSuccess: 'Form loaded successfully!',
        formLoadFailed: 'Failed to load form template!',
        formLoadError: 'Error fetching form template!'
    },
    FormDesigner: {
        saveDialog: {
            title: 'Save QC Form',
            formNameLabel: 'QC Form Name',
            formNamePlaceholder: 'Please enter the QC form name...',
            cancel: 'Cancel',
            confirm: 'Save'
        },
        validation: {
            formNameRequired: 'QC form name cannot be empty!',
            folderRequired: 'Please select a folder.'
        }
    },
    orderManagement: {
        type: 'Type',
        createdAt: 'Created At',
        createdBy: 'Created By',
        updatedAt: 'Updated At',
        updatedBy: 'Updated By',
        status: 'Status',
        title: 'Order Management',
        searchPlaceholder: 'Search By Keyword',
        refreshTooltip: 'Refresh Order table',
        addButton: '+ New',
        viewDispatchedTaskButton: 'View Dispatched Tasks',
        cancel: 'Cancel',
        edit: 'Edit',
        confirm: 'Confirm',
        delete: 'Delete',
        reset: 'Reset',
        dispatchPlan: 'Dispatch Plan',
        dispatchPlanName: 'Dispatch Plan Name',
        tabTitleQcOrderForm: 'QC Order Form',
        orderId: 'Order ID',
        description: 'Description',
        orderTable: {
            id: 'Order ID',
            name: 'Name',
            state: 'State',
            associatedUsers: 'Associated Users',
            associatedForms: 'Associated Forms',
            dispatchPlanId: 'Dispatch Plan ID',
            planCount: 'Plan Count',
        },
        dispatchedTaskTable:{
            actions: 'Actions',
            id: 'ID',
            dispatchId: 'Dispatch Plan ID',
            name: 'Task Name',
            user: 'User',
            form: 'Form',
            state: 'State',
            dispatchTime: 'Dispatch Time',
            remainingTime: 'Remaining Time',
        },
        orderDetailDialog: {
            orderDetailDivider: 'Order Detail',
            dispatchesDivider: 'Dispatch Plan',
            dispatchConfigDivider: 'Dispatch Scheduling',
            taskConfigDivider: 'Task Config',
            systemAssociationDivider: 'System Association',
            dispatchedTasksDivider: 'Dispatched Tasks',
            title: 'Order Detail',
            orderName: 'Order Name',
            planName: 'Plan Name',
            planId: 'Plan Id',
            executionLogic: 'Execution Logic',
            executedCount: 'Executed Count',
            periodStartTime: 'Start Time',
            periodEndTime: 'End Time',
            dispatchLimit: 'Dispatch Limit',
            taskDueDateOffset: 'Task Due Date Offset (Minute)'
        },
        orderFormDialog: {
            orderNamePlaceholder: 'Please fill in order name',
            descriptionPlaceholder: 'Please fill in description',
            dispatchPlanNamePlaceholder: 'Please fill in dispatch plan name',
            executionPeriod: 'Execution Period',
            executionTime: 'Execution Time',
            executionTimePlaceholder: 'Please select execution Time',
            oneTimePlan: 'One Time Plan',
            periodicPlan: 'Periodic Plan',
            limited: 'Limited',
            unlimited: 'Unlimited',
            product: 'Product',
            productPlaceholder: 'Please select associated product',
            productionWorkOrder: 'Product Work Order',
            productionWorkOrderPlaceholder: 'Please select associated production work order',
            rawMaterial: 'Raw Material',
            rawMaterialPlaceholder: 'Please select associated rawMaterial',
            maintenanceWorkOrder: 'Maintenance Work Order',
            maintenanceWorkOrderPlaceholder: 'Please select associated maintenance work order',
            equipment: 'Equipment',
            equipmentPlaceholder: 'Please select associated equipment',
            productionModuleDivider: 'Production Module Association',
            maintenanceModuleDivider: 'Maintenance Module Association',
            searchFormPlaceholder: 'Search Form',
            searchUserPlaceholder: 'Search User',
            addDispatchButton: 'Add Dispatch Plan',
            addDispatchByShiftButton: 'Add Plan By Shift',
            collapseButton: 'Collapse',
            expandButton: 'Expand',
            deleteDispatchButton: 'Delete Dispatch Plan',
            orderPreview: 'Order Preview',
            uncheckAll: 'Uncheck All',
        },
        validation: {
            orderNameRequired: 'Order name is required',
            executionPeriodRequired: 'Execution period is required',
            userRequired: 'At least one user is required',
            formRequired: 'At least one form is required',
        },
        messages: {
            orderAddedSuccess: 'Order added successfully',
            orderUpdatedSuccess: 'Order updated successfully',
            orderDeletedSuccess: 'Order deleted successfully',
            validationErrors: 'Please fill all required fields before proceeding',
            editConfirmation: 'Are you sure you want to edit?',
            submitConfirmation: 'Are you sure you want to submit?',
            deleteConfirmation: 'Are you sure you want to delete?',
            resetConfirmation: 'Are you sure you want to reset?',
        },
    },
    instrumentManagement: {
        instrument: 'Instrument',
    },
    testSubjectManagement: {
        testSubject: 'Test Subject',
    },
    samplingLocationManagement: {
        samplingLocation: 'Sampling Location',
    },
    FormDataSummary: {
        loadingText: "Generating PDF report...",
        summaryTitle: "Summary",
        dateRangeSeparator: "to",
        startPlaceholder: "Start Date",
        endPlaceholder: "End Date",
        generatePdf: "Generate PDF",
        viewRecords: "View QC Records",
        recordTable: {
            groupSystemInfo: "System Submission Info",
            submitter: "Submitter",
            submittedAt: "Submission Time",
            submissionId: "Submission ID",
            groupQcDetails: "QC Form Records",
            actions: "Actions",
            view: "View",
            delete: "Delete",
            deleteConfirmTitle: "Confirm Deletion",
            deleteConfirmMessage: "Are you sure you want to delete submission ID {id}?",
            deleteSuccess: "Record deleted successfully!",
            deleteCanceled: "Deletion canceled",
            deleteFailed: "Deletion failed. Please try again",
            exportExcel: "Export to Excel",
            searchPlaceholder: "Search...",
            closeButton: "Close"
        },
        detailDialog: {
            titleSuffix: "Submission Records",
            uncategorized: "Uncategorized",
            submitter: "Submitter",
            submittedAt: "Submission Time",
            signatureTitle: "Inspector Signature:",
            cancelButton: "Cancel",
            exportButton: "Export"
        },
        shortcuts: {
            thisWeek: "This Week",
            thisMonth: "This Month",
            lastMonth: "Last Month",
            lastThreeMonths: "Last 3 Months"
        },
        messages: {
            noChartData: "No chart data to export!",
            exportSuccess: "PDF downloaded successfully!",
            exportFailed: "PDF generation failed. Please try again!",
            noExcelData: "No data to export",
            exportExcelSuccess: "Excel exported successfully!",
            selectRecordToExport: "Please select a record to export!"
        }
    },
    Export: {
        titleSuffix: 'Submission Records',
        groupTitle: 'QC Submission Info',
        signatureTitle: 'Inspector Signature:',
        tableHead: ['QC Field', 'QC Result'],
        fallback: ' - ',
        systemInfo: {
            submitter: 'Submitter',
            submittedAt: 'Submission Time',
            submissionId: 'Submission ID'
        }
    }
};
